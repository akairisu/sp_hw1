Method: I did I/O multiplexing with select, checking for connection every second. I checked for new connections first, then look for new inputs from old file descrpters. For filelock, I check whether the file is locked or not with fcntl and F_GETLK command. I return  when the file isn't locked , since the process id of the lock structure will be changed if the file is lock(reference: textbook P486~P490) , it is able to check if the file is locked or not determining if the process id is 0. However, filelock won't work upon the same server, so I open an array to record if each account is being changed by its index. Whenever a client sents a write request to the server, the server will check the two conditions above: is pid 0 and is the array value for the index 0. If true, we therefore lock the accounts with fcntl and F_SETLK and F_WRLCK, also change the value of the array we opened. Else, the request is turned down. The tricky part is for writing, where we must determine if the input is for requesting for access or to execute a command. To solve the problem, I open an array, and record the processing account for each file descripter, since every filedescripter is unique in a single server.
Since the linux environment is unfamiliar for me, I struggle a lot until I finally understand the structure of the code, and had to spent the last week dealing with all the APIs and algorithms. I received a lot of help from some of the classmates, so I would really like to give a shoutout to B07902058, B07902066, B07902068 and B07902084. 